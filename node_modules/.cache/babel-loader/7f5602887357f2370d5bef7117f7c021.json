{"ast":null,"code":"// import { useState } from \"react\";\n// const useInput = (validateValue) => {\n//   const [enteredValue, setEnteredValue] = useState(\"\");\n//   const [isTouched, setIsTouched] = useState(false);\n//   const valueIsValid = validateValue(enteredValue);\n//   const hasError = !valueIsValid && isTouched;\n//   const valueChangeHandler = (event) => {\n//     setEnteredValue(event.target.value);\n//   };\n//   const inputBlurHandler = (event) => {\n//     setIsTouched(true);\n//   };\n//   return {\n//     value: enteredValue,\n//     isValid: valueIsValid,\n//     hasError: hasError,\n//     valueChangeHandler,\n//     inputBlurHandler,\n//   };\n// };\n// export default useInput;","map":{"version":3,"names":[],"sources":["/Users/kyoorim/Desktop/practice-coding/udemy-07-complexInput/src/hooks/use-input.js"],"sourcesContent":["// import { useState } from \"react\";\n\n// const useInput = (validateValue) => {\n//   const [enteredValue, setEnteredValue] = useState(\"\");\n//   const [isTouched, setIsTouched] = useState(false);\n\n//   const valueIsValid = validateValue(enteredValue);\n//   const hasError = !valueIsValid && isTouched;\n\n//   const valueChangeHandler = (event) => {\n//     setEnteredValue(event.target.value);\n//   };\n\n//   const inputBlurHandler = (event) => {\n//     setIsTouched(true);\n//   };\n\n//   return {\n//     value: enteredValue,\n//     isValid: valueIsValid,\n//     hasError: hasError,\n//     valueChangeHandler,\n//     inputBlurHandler,\n//   };\n// };\n\n// export default useInput;\n"],"mappings":"AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}